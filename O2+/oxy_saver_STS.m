function oxy_saver_STS(p, T, ne, n1, nO2a, nO2b, na, nO1D, EdN)
if ne<0
    ne=0;
end
    % recording populations
fileID = fopen('LoKI-master\Code\Input\Oxygen\O2_vibpop.txt','w');
fprintf(fileID, ...
            '%% populations of the different vibrational states of O2\n');
l_of_n1=5;      % сколько уровней будем учитывать
n1_fr=n1(1:l_of_n1)/sum(n1(1:l_of_n1))-mod(n1(1:l_of_n1)/...
                                               sum(n1(1:l_of_n1)), 1e-13);
n1_fr(end)=1-sum(n1_fr(1:end-1));
for i=1:l_of_n1
    fprintf(fileID, 'O2(X,v=%1.0f)\t%.13f\n', i-1, n1_fr(i));
end
fclose(fileID);

nall=sum([n1' nO2a nO2b na nO1D]);
nO2all=sum([n1' nO2a nO2b]);
nO2Xall=sum(n1);
nO2all_fr=nO2all/nall-mod(nO2all/nall, 1e-13);
nO_fr=1-nO2all_fr;
nO2X_fr=nO2Xall/nO2all-mod(nO2Xall/nO2all, 1e-13);
nO2a_fr=nO2a/nO2all-mod(nO2a/nO2all, 1e-13);
nO2b_fr=1-nO2X_fr-nO2a_fr;
nOall=na+nO1D;
nO3P_fr=na/nOall-mod(na/nOall, 1e-13);
if nO_fr==0
    nO3P_fr=1;
end
% nO3P_fr=1;
% nO3P_fr=0.99999999;
nO1D_fr=1-nO3P_fr;

% recording setup conditions
fileID = fopen('LoKI-master\Code\Input\Oxygen\oxygen.in','w');

fprintf(fileID,['%% --- configuration of the working conditions ---\n',...
'workingConditions:\n',...
'  gasPressure:          %8.5f                  %% in Pa\n',...
'  gasTemperature:       %8.2f                  %% in K\n',...
'  electronDensity:      %8.5e                  %% in m-3\n',...
...'  electronTemperature:  %8.5e                  %% in eV\n',...
'  chamberLength:        1.0                    %% in m\n',...
'  chamberRadius:        1.0                    %% in m\n',...
'  reducedField:         %8.2f      			%% in Td\n',...
'  excitationFrequency:  0                      %% in Hz\n',...
'%% --- configuration of the electron kinetics ---\n',...
'electronKinetics:\n',...
'  isOn: true             %% true or false (to activate of deactivate the electron Kinetics)\n',...
'  eedfType: boltzmann    %% boltzmann or prescribedEedf (maxwellian)\n',...
'  shapeParameter: 1           %% 1 -- maxwellian\n',...
'  ionizationOperatorType: usingSDCS %% conservative, oneTakesAll, equalSharing or usingSDCS\n',...
'  growthModelType: temporal %% temporal or spatial\n',...
'  includeEECollisions: false\n',...
'  LXCatFiles:            %% cross section files\n',...
'    - Oxygen/O2_LXCat.txt\n',...
...'    - Oxygen/O2_rot_LXCat.txt\n',...
'    - Oxygen/O_LXCat.txt\n',...
'  LXCatFilesExtra:        %% extra cross section files\n',...
'    - Oxygen/O2_LXCat_extra_v0.txt\n',...
'    - Oxygen/O2_vib_LXCat.txt\n',...
'    - Oxygen/O_LXCat_extra.txt\n',...
...'    - Oxygen/O2_LXCat_extra.txt\n',...   % Maksim's way to include
...'    - Oxygen/O_LXCat_extra.txt\n',...    %   cross sections
...'    - Oxygen/Laporta_eD_vib.txt\n',...
...'    - Oxygen/Laporta_e_O2Xi__O3P_Om.txt\n',...
'  gasProperties:        %% properties of the gases (S.I. Units)\n',...
'    mass: Databases/masses.txt\n',...
'    fraction:\n',...
'      - O2 = %.13f\n',...
'      - O = %.13f\n',...
'    harmonicFrequency: Databases/harmonicFrequencies.txt\n',...
'    anharmonicFrequency: Databases/anharmonicFrequencies.txt\n',...
'    rotationalConstant: Databases/rotationalConstants.txt\n',...
'    electricQuadrupoleMoment: Databases/quadrupoleMoment.txt\n',...
'    OPBParameter: Databases/OPBParameter.txt\n',...
'  stateProperties:      %% properties of the states (S.I. Units except for the energy [eV])\n',...
'    energy:\n',...
'      - O2(X,v=*) = harmonicOscillatorEnergy\n',... morseOscillatorEnergy
...'      - O2(X,v=0,J=*) = rigidRotorEnergy\n',...
'    statisticalWeight:\n',...
'      - O2(X) = 3\n',...
'      - O2(a1Dg) = 2\n',...
'      - O2(b1Sg+) = 1\n',...
'      - O2(X,v=*) = 3.0\n',...
...'      - O2(X,v=0,J=*) = rotationalDegeneracy\n',...
'      - O(3P) = 9\n',...
'      - O(1D) = 5\n',...
'    population:\n',...
'      - O2(X) = %.13f\n',...
...'       - O2(X,v=*) = boltzmannPopulation@gasTemperature\n',...
'      - Oxygen/O2_vibpop.txt\n',...
...'      - O2(X,v=0,J=*) = boltzmannPopulation@gasTemperature\n',...
'      - O2(a1Dg) = %.13f\n',...
'      - O2(b1Sg+) = %.13f\n',...
...'      - O2(X,v=0) = 1.0\n',...
'      - O(3P) = %.13f\n',...
'	   - O(1D) = %.13f\n',...
...'	   - O(*) = %.13f\n',...
'  numerics: %% configuration of numerical details of the simulation\n',...
'    energyGrid:             %% properties of the energy grid (in eV)\n',...
'      maxEnergy: 50\n',...
'      cellNumber: 2000\n',...
'    maxPowerBalanceRelError: 1e-9       %% threshold for the relative power balance warning message\n',...
'    nonLinearRoutines:\n',...
'      algorithm: mixingDirectSolutions  %% mixingDirectSolutions or iterativeSolution\n',...
'      mixingParameter: 1                %% mixingDirectSolutions mixing parameter from 0 to 1\n',...
'      maxEedfRelError: 1e-10             %% use 1e-10 | maximum difference for each eedf component between two iterations (stop criteria)\n',...
'%% --- configuration for the heavy species kinetics ---\n',...
'chemistry:\n',...
'  isOn: false\n',...
'%% --- configuration of the graphical user interface ---\n',...
'gui: \n',...
'  isOn: false\n',...
...'  refreshFrequency: 1\n',...
'%% ---  configuration of the output files ---\n',...
'output: \n',...
'  isOn: true\n',...
'  folder: RNF\n',...
'  dataFiles:\n',...
...'    - eedf\n',...
...'    - swarmParameters\n',...
...'    - powerBalance\n',...
...'    - lookUpTable\n',...
'    - rateCoefficients\n'],...
    p, T, ne, ...T_e*8.61732814974056e-5,...
        EdN, nO2all_fr, nO_fr, nO2X_fr, nO2a_fr, nO2b_fr, ...
        nO3P_fr, nO1D_fr);

fclose(fileID);
end